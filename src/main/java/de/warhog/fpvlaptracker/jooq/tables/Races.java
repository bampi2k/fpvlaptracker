/*
 * This file is generated by jOOQ.
*/
package de.warhog.fpvlaptracker.jooq.tables;


import de.warhog.fpvlaptracker.jooq.Keys;
import de.warhog.fpvlaptracker.jooq.Public;
import de.warhog.fpvlaptracker.jooq.tables.records.RacesRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Races extends TableImpl<RacesRecord> {

    private static final long serialVersionUID = -1349302713;

    /**
     * The reference instance of <code>PUBLIC.RACES</code>
     */
    public static final Races RACES = new Races();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RacesRecord> getRecordType() {
        return RacesRecord.class;
    }

    /**
     * The column <code>PUBLIC.RACES.ID</code>.
     */
    public final TableField<RacesRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("(NEXT VALUE FOR PUBLIC.SYSTEM_SEQUENCE_ACBE0DED_AB09_47F1_ABB9_38D83FDEF82A)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>PUBLIC.RACES.STARTTIME</code>.
     */
    public final TableField<RacesRecord, Integer> STARTTIME = createField("STARTTIME", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>PUBLIC.RACES.LAPS</code>.
     */
    public final TableField<RacesRecord, Integer> LAPS = createField("LAPS", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>PUBLIC.RACES.STATE</code>.
     */
    public final TableField<RacesRecord, String> STATE = createField("STATE", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * Create a <code>PUBLIC.RACES</code> table reference
     */
    public Races() {
        this("RACES", null);
    }

    /**
     * Create an aliased <code>PUBLIC.RACES</code> table reference
     */
    public Races(String alias) {
        this(alias, RACES);
    }

    private Races(String alias, Table<RacesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Races(String alias, Table<RacesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<RacesRecord, Integer> getIdentity() {
        return Keys.IDENTITY_RACES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RacesRecord> getPrimaryKey() {
        return Keys.PK_RACES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RacesRecord>> getKeys() {
        return Arrays.<UniqueKey<RacesRecord>>asList(Keys.PK_RACES, Keys.UQ_RACES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Races as(String alias) {
        return new Races(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Races rename(String name) {
        return new Races(name, null);
    }
}
